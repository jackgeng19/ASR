import matplotlib.pyplot as plt

# Sample data from the JSON (subtitles_t_start and subtitles_t_end)
start_times = [0.06, 0.659, 0.69, 1.02, 1.53, 1.8, 2.07, 2.669, 2.82, 3.06, 3.3890000000000002, 3.57, 3.75, 3.959, 4.14, 4.5, 4.71, 4.83, 5.069, 5.25, 5.43, 5.73, 17.06, 18.06, 18.33, 18.48, 18.84, 19.02, 19.35, 19.619, 19.77, 19.92, 20.189, 20.55, 20.97, 21.27, 21.39, 21.75, 22.02, 22.26, 22.859, 22.98, 23.22, 23.67, 23.88, 24.63, 24.869, 24.99, 25.08, 25.289, 25.68, 26.039, 26.31, 26.67, 27.42, 28.14, 28.56, 28.769, 29.48, 30.48, 30.75, 31.26, 31.56, 31.98, 32.399, 32.79, 33.21, 33.57, 34.02, 34.71, 35.16, 35.19, 35.64, 36.329, 36.6, 37.05, 37.71, 38.19, 38.37, 38.67, 38.85, 39.09, 39.27, 39.45, 39.899, 40.71, 40.89, 41.1, 41.46, 41.84, 42.84, 43.02, 43.25, 44.25, 44.789, 45.0, 45.09, 45.3, 45.42, 45.48, 45.87, 45.899, 46.26, 46.44, 47.01, 47.07, 48.62, 49.62, 49.739, 50.67, 50.85, 51.27, 51.3, 51.93, 52.17, 52.53, 52.739, 52.829, 53.1, 53.219, 53.67, 53.85, 53.969, 54.0, 54.539, 54.899, 55.11, 55.289, 55.469, 56.1, 56.309, 56.579, 57.0, 57.329, 57.719, 58.879, 59.879, 60.03, 60.239, 60.48, 61.079, 61.379, 62.1, 62.129, 62.46, 62.67, 62.879, 62.91, 63.18, 63.6, 64.559, 64.71, 65.01, 65.549, 65.76, 65.97, 66.42, 66.6, 66.9, 67.229, 67.409, 67.95, 68.13, 68.25, 68.39, 69.39, 69.51, 69.659, 69.75, 70.049, 70.14, 70.35, 70.439, 70.56, 70.74, 70.92, 71.25, 71.549, 71.58, 72.119, 72.479, 72.659, 72.81, 72.869, 72.99, 73.11, 73.59, 73.74, 73.799, 74.01, 74.369, 74.7, 74.76, 74.88, 75.06, 75.09, 75.21, 75.24, 75.659, 76.02, 76.08, 76.32, 76.74, 76.83, 77.04, 77.13, 77.22, 77.34, 77.61, 77.759, 78.15, 78.299, 78.479, 78.689, 79.11, 79.56, 79.86, 79.89, 80.189, 80.46, 80.52, 80.7, 80.97, 81.0, 81.45, 81.72, 81.869, 82.049, 82.29, 82.799, 83.28, 83.7, 83.82, 83.97, 84.24, 84.33, 84.93, 85.32, 85.71, 85.86, 86.009, 86.34, 86.85, 87.33, 87.45, 87.54, 87.81, 88.08, 88.29, 88.35, 88.59, 88.619, 88.89, 89.159, 89.49, 89.64, 89.79, 89.97, 90.54, 90.81, 91.049, 91.71, 92.04, 92.4, 92.46, 92.939, 93.689, 94.049, 94.47, 94.68, 95.07, 95.189, 95.579, 95.82, 96.03, 96.39, 96.689, 96.99, 97.14, 97.229, 97.439, 97.59, 97.619, 97.89, 98.07, 98.549, 98.85, 98.97, 99.329, 99.869, 100.259, 100.35, 100.56, 100.71, 100.77, 101.22, 101.31, 101.4, 101.7, 101.82, 101.88, 102.24, 102.39, 102.72, 103.14, 103.35, 103.47, 104.01, 104.07, 104.73, 105.06, 105.6, 105.78, 105.93, 105.96, 106.23, 106.59, 107.01, 107.52, 108.11, 109.11, 109.35, 109.65, 109.74, 109.83, 109.95, 110.04, 110.25, 110.31, 110.67, 110.88, 111.0, 111.09, 111.54, 111.66, 111.75, 111.84, 112.02, 112.14, 112.23, 112.5, 113.4, 113.64, 113.76, 114.0, 114.18, 114.39, 115.61, 116.61, 116.85, 117.12, 117.3, 117.51, 117.99, 118.47, 118.59, 118.8, 118.98, 119.22, 119.55, 119.73, 119.94, 120.36, 120.53, 121.53, 121.71, 121.77, 122.28, 122.49, 122.73, 123.54, 123.96, 124.38, 124.68, 124.92, 129.89, 130.89, 131.43, 131.79, 132.18, 132.33, 132.42, 132.45, 132.9, 133.02, 133.5, 133.59, 134.16, 134.94, 135.06, 135.42, 135.66, 135.84, 136.08, 136.23, 138.11, 139.11, 139.59, 139.77, 140.16, 140.55, 141.0, 141.39, 142.08, 142.82, 143.82, 144.21, 144.3, 144.45, 144.48, 144.63, 144.81, 144.99, 145.17, 145.29, 145.71, 145.8, 145.92, 146.61, 147.39, 147.42, 147.81, 148.05, 148.2, 148.38, 148.41, 148.62, 149.04, 149.28, 149.46, 149.55, 149.61, 149.94, 150.24, 150.42, 150.54, 150.72, 151.11, 151.98, 152.13, 152.46, 152.73, 153.0, 153.51, 153.66, 154.08, 154.26, 154.35, 154.5, 154.74, 155.01, 155.25, 156.15, 156.33, 156.54, 156.93, 157.29, 157.44, 157.56, 157.709, 158.37, 158.49, 158.64, 158.73, 158.91, 158.94, 159.42, 159.57, 159.84, 159.99, 160.14, 160.23, 160.44, 160.89, 160.92]  # Replace with your actual data
end_times = [0.659, 0.69, 1.02, 1.53, 1.8, 2.07, 2.669, 2.81, 3.06, 3.3890000000000002, 3.57, 3.75, 3.959, 4.13, 4.5, 4.71, 4.83, 5.069, 5.25, 5.43, 5.72, 17.06, 18.06, 18.33, 18.48, 18.84, 19.02, 19.35, 19.609, 19.77, 19.92, 20.189, 20.55, 20.97, 21.27, 21.39, 21.74, 22.02, 22.26, 22.859, 22.98, 23.22, 23.67, 23.87, 24.63, 24.869, 24.99, 25.08, 25.289, 25.68, 26.039, 26.3, 26.67, 27.42, 28.14, 28.56, 28.759, 29.48, 30.48, 30.75, 31.26, 31.56, 31.97, 32.399, 32.79, 33.21, 33.57, 34.02, 34.7, 35.16, 35.19, 35.64, 36.329, 36.59, 37.05, 37.71, 38.19, 38.37, 38.66, 38.85, 39.09, 39.27, 39.45, 39.899, 40.71, 40.89, 41.09, 41.46, 41.84, 42.84, 43.02, 43.25, 44.25, 44.789, 44.99, 45.09, 45.3, 45.42, 45.48, 45.87, 45.899, 46.25, 46.44, 47.01, 47.07, 48.62, 49.62, 49.739, 50.67, 50.84, 51.27, 51.3, 51.93, 52.17, 52.53, 52.739, 52.829, 53.09, 53.219, 53.67, 53.85, 53.969, 54.0, 54.539, 54.899, 55.1, 55.289, 55.469, 56.1, 56.309, 56.579, 57.0, 57.319, 57.719, 58.879, 59.879, 60.03, 60.239, 60.48, 61.069, 61.379, 62.1, 62.129, 62.46, 62.67, 62.879, 62.91, 63.17, 63.59, 64.559, 64.71, 65.01, 65.549, 65.76, 65.96, 66.42, 66.6, 66.9, 67.229, 67.409, 67.95, 68.13, 68.24, 68.39, 69.39, 69.51, 69.659, 69.75, 70.049, 70.14, 70.34, 70.439, 70.56, 70.74, 70.92, 71.25, 71.549, 71.57, 72.119, 72.479, 72.659, 72.81, 72.869, 72.99, 73.1, 73.59, 73.74, 73.799, 74.01, 74.369, 74.7, 74.75, 74.88, 75.06, 75.09, 75.21, 75.24, 75.659, 76.02, 76.08, 76.31, 76.74, 76.83, 77.04, 77.13, 77.22, 77.34, 77.61, 77.749, 78.15, 78.299, 78.479, 78.689, 79.1, 79.56, 79.86, 79.89, 80.189, 80.46, 80.52, 80.7, 80.96, 81.0, 81.45, 81.72, 81.869, 82.049, 82.29, 82.789, 83.28, 83.7, 83.82, 83.97, 84.24, 84.32, 84.93, 85.32, 85.71, 85.86, 86.009, 86.34, 86.85, 87.32, 87.45, 87.54, 87.81, 88.08, 88.29, 88.35, 88.59, 88.619, 88.88, 89.159, 89.49, 89.64, 89.79, 89.97, 90.54, 90.81, 91.039, 91.71, 92.04, 92.4, 92.46, 92.929, 93.689, 94.049, 94.47, 94.68, 95.07, 95.179, 95.579, 95.82, 96.03, 96.39, 96.689, 96.99, 97.14, 97.219, 97.439, 97.59, 97.619, 97.89, 98.07, 98.549, 98.85, 98.97, 99.319, 99.869, 100.259, 100.35, 100.56, 100.71, 100.77, 101.21, 101.31, 101.4, 101.7, 101.82, 101.88, 102.24, 102.38, 102.72, 103.14, 103.35, 103.47, 104.0, 104.07, 104.73, 105.06, 105.6, 105.78, 105.93, 105.96, 106.22, 106.59, 107.01, 107.52, 108.11, 109.1, 109.35, 109.65, 109.74, 109.83, 109.95, 110.04, 110.25, 110.3, 110.66, 110.88, 111.0, 111.09, 111.54, 111.66, 111.75, 111.84, 112.02, 112.13, 112.23, 112.5, 113.4, 113.64, 113.76, 114.0, 114.18, 114.39, 115.61, 116.6, 116.85, 117.12, 117.3, 117.51, 117.99, 118.47, 118.58, 118.8, 118.98, 119.22, 119.55, 119.73, 119.93, 120.36, 120.53, 121.53, 121.71, 121.77, 122.28, 122.49, 122.72, 123.54, 123.96, 124.38, 124.68, 124.92, 129.88, 130.89, 131.43, 131.79, 132.18, 132.33, 132.42, 132.45, 132.89, 133.02, 133.5, 133.59, 134.16, 134.94, 135.06, 135.41, 135.66, 135.84, 136.08, 136.23, 138.11, 139.11, 139.59, 139.76, 140.16, 140.55, 141.0, 141.39, 142.08, 142.81, 143.82, 144.2, 144.3, 144.45, 144.48, 144.63, 144.81, 144.99, 145.17, 145.28, 145.71, 145.8, 145.92, 146.61, 147.39, 147.42, 147.81, 148.04, 148.2, 148.38, 148.41, 148.62, 149.04, 149.28, 149.46, 149.55, 149.6, 149.94, 150.24, 150.42, 150.54, 150.72, 151.11, 151.97, 152.13, 152.46, 152.73, 153.0, 153.51, 153.66, 154.07, 154.26, 154.35, 154.5, 154.74, 155.01, 155.25, 156.14, 156.33, 156.54, 156.93, 157.29, 157.44, 157.55, 157.709, 158.37, 158.49, 158.64, 158.73, 158.91, 158.93, 159.42, 159.57, 159.84, 159.99, 160.14, 160.23, 160.43, 160.89, 160.92, 163.34]  # Replace with your actual data

# Video duration in seconds
video_duration = 121

# Create an array for the y values (constant value for vertical bars)
y_values = [1] * len(start_times)

# Initialize a figure and axis
fig, ax = plt.subplots(figsize=(8, 4))

# Plot the transcript intervals as vertical bars
for start, end in zip(start_times, end_times):
    ax.barh(y_values, end - start, left=start, height=0.5, color='blue')

# Set y-axis limits and labels
ax.set_ylim(0.5, 1.5)
ax.set_yticks([1])
ax.set_yticklabels(['Transcript'])

# Set x-axis limits and labels
ax.set_xlim(0, video_duration)
ax.set_xlabel('Time (seconds)')

# Remove x-axis ticks at the top
ax.tick_params(axis='x', top=False)

# Set plot title
plt.title('Transcript Distribution Over Time')

# Show the plot
plt.show()
